"use strict";const o=require("electron");let i=e=>{const r=Buffer.from([0,0]),f=Buffer.alloc(12),n=e<0,t=Math.abs(e),u=Math.trunc(t);let a=t-u;return n&&(a=-a),f.writeBigInt64LE(BigInt(n?-u:u),0),f.writeFloatLE(a,8),Buffer.concat([r,f])},l=e=>{let r=Buffer.from(e,"ascii");return Buffer.concat([Buffer.from([1]),r,Buffer.from([0])])},d=e=>{let r=Buffer.from(e,"ascii");return Buffer.concat([Buffer.from([0,1]),r,Buffer.from([0])])},c=(e,r)=>{const f=e.length-r,n=Buffer.alloc(2);return n.writeUInt16BE(f),n},s=e=>{let r=e.toString("hex").match(/.{1,2}/g).map(f=>f.padStart(2,"0")).join(" ");console.log(r)},m={"==":Buffer.from([2,100,0]),">":Buffer.from([2,101,0]),"<":Buffer.from([2,102,0]),">=":Buffer.from([2,103,0]),"<=":Buffer.from([2,104,0]),"&&":Buffer.from([2,105,0]),"||":Buffer.from([2,106,0]),"!a":Buffer.from([2,107,0]),"+":Buffer.from([2,201,0]),"-":Buffer.from([2,202,0]),"*":Buffer.from([2,203,0]),"/":Buffer.from([2,204,0])};function B(e,r){for(const f of r.split(" "))Object.keys(m).includes(f)?e=Buffer.concat([e,m[f],Buffer.from([2])]):!isNaN(f)&&!isNaN(parseFloat(f))?e=Buffer.concat([e,i(parseFloat(f))]):e=Buffer.concat([e,l(f)]);return e}o.contextBridge.exposeInMainWorld("electron",{ipcRenderer:{on(e,r){const f=(n,...t)=>r(...t);return o.ipcRenderer.on(e,f),()=>{o.ipcRenderer.removeListener(e,f)}},once(e,r){o.ipcRenderer.once(e,(...f)=>r(...f))},removeListener(e,r){o.ipcRenderer.removeListener(e,r)},removeAllListeners(e){o.ipcRenderer.removeAllListeners(e)},send(e,...r){o.ipcRenderer.send(e,...r)},invoke(e,...r){return o.ipcRenderer.invoke(e,...r)},showInputDialog:e=>o.ipcRenderer.invoke("show-input-dialog",e),getSerialDevices:async e=>await o.ipcRenderer.invoke("request-serial-devices",e),connectSerialDevice:async e=>await o.ipcRenderer.invoke("connect-serial-device",e),writeSerial:e=>o.ipcRenderer.invoke("send-serial",e),writeSerialAndWait:(e,r=1)=>o.ipcRenderer.invoke("send-and-wait",e,r)}});o.contextBridge.exposeInMainWorld("api",{generators:{pinMode:(e,r)=>{let f=Buffer.concat([Buffer.from([254,222,31,0,244,1,2]),i(e),i(r)]);return s(f),f},analogWrite:(e,r)=>Buffer.concat([Buffer.from([254,222,31,0,246,1,2]),i(e),i(r)]),ditialWrite:(e,r)=>Buffer.concat([Buffer.from([254,222,31,0,245,1,2]),i(e),i(r)]),delay:e=>Buffer.concat([Buffer.from([254,222,17,0,144,1,1]),i(e)]),digital_read:e=>Buffer.concat([Buffer.from([2,247,1,1]),i(e)]),print_pin_read:e=>{let r=Buffer.concat([Buffer.from([254,222,255,255,88,2,1]),Buffer.from([2,247,1,1]),i(e)]),f=c(r,4);return r[2]=f[1],r[3]=f[0],r},set_var:(e,r,f=1)=>{let n=l(e),t=Buffer.concat([Buffer.from([254,222,255,255,145,1,2]),n]);if(f)t=B(t,r);else{let a=Buffer.concat([Buffer.from([0]),l(r)]);t=Buffer.concat([t,a])}let u=c(t,4);return t[2]=u[1],t[3]=u[0],s(t),t},set_var_as_pin:(e,r,f=0)=>{let n=l(e),t=Buffer.concat([Buffer.from([254,222,255,255,145,1,2]),n]),u;f?u=Buffer.concat([Buffer.from([2,248,1,1]),i(r)]):u=Buffer.concat([Buffer.from([2,247,1,1]),i(r)]),t=Buffer.concat([t,u]);let a=c(t,4);return t[2]=a[1],t[3]=a[0],s(t),t},print_var:e=>{let r=l(e),f=Buffer.concat([Buffer.from([254,222,255,255,88,2,1]),r]),n=c(f,4);return f[2]=n[1],f[3]=n[0],f},print_text:e=>{let r=d(e),f=Buffer.concat([Buffer.from([254,222,255,255,88,2,1]),r]),n=c(f,4);return f[2]=n[1],f[3]=n[0],f},print_number:e=>{let r=i(e),f=Buffer.concat([Buffer.from([254,222,255,255,88,2,1]),r]),n=c(f,4);return f[2]=n[1],f[3]=n[0],f},single_if:e=>{let r=Buffer.from([254,222,255,255,47,1,1]);r=B(r,e),s(r);let f=c(r,4);return r[2]=f[1],r[3]=f[0],r},while:e=>{let r=Buffer.from([254,222,255,255,46,1,1]);r=B(r,e),s(r);let f=c(r,4);return r[2]=f[1],r[3]=f[0],r},for_times:e=>{let r=Buffer.from([254,222,255,255,45,1,4,1,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,102,0,2,1,105,0]);r=B(r,e),r=Buffer.concat([r,Buffer.from([2,201,0,2,1,105,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0])]);let f=c(r,4);return r[2]=f[1],r[3]=f[0],s(r),r},reset_block:()=>{let e=Buffer.from([254,222,255,255,0,1]),r=c(e,4);return e[2]=r[1],e[3]=r[0],s(e),e}}});o.contextBridge.exposeInMainWorld("visualization_api",{setDigitalPin:e=>o.ipcRenderer.on("board_visualization_digital",e),setAnalogPin:e=>o.ipcRenderer.on("board_visualization_analog",e)});o.contextBridge.exposeInMainWorld("board_connection",{checkConnected:()=>o.ipcRenderer.invoke("check_connected")});
