Руководство пользователя Rudiron IDE

СОДЕРЖАНИЕ
0. Установка
1. Введение
2. Интерфейс приложения
3. Работа с файлами
4. Подключение к плате
5. Категории блоков
6. Работа с блоками
7. Визуализация платы
8. Монитор порта
9. Выполнение программ
10. Советы и рекомендации
















0. Введение
Rudiron IDE — это интегрированная среда разработки для визуального программирования микроконтроллера Рудирон от компании Aquarius. Приложение предоставляет интуитивно понятный блочный интерфейс для создания программ с помощью блочного программирования для взаимодействия с аппаратной платформой Рудирон, обеспечивая полный цикл программирования от создания кода до его выполнения на контроллере. 

1. Установка Rudiron IDE на Windows
1. Перейдите на страницу релизов проекта на GitFlic: https://gitflic.ru/project/rudiron/rudiron-ide/releases
2. Найдите последнюю версию приложения и скачайте установочный файл с расширением .exe (например, RudironIDE-Setup.exe).
3. Запустите скачанный файл двойным щелчком мыши.
4. В появившемся окне следуйте инструкциям установщика:
   - При необходимости выберите папку для установки
   - Дождитесь завершения процесса установки
5. После завершения установки на рабочем столе появится ярлык Rudiron IDE (если вы выбрали соответствующую опцию).
6. Запустите приложение через ярлык или из меню «Пуск».

Примечание:
- Для работы программы не требуется установка дополнительных драйверов для большинства плат Rudiron. Если плата не определяется, скачайте и установите драйверы с официального сайта производителя платы.
- Если при запуске появляется предупреждение SmartScreen, выберите «Подробнее» → «Выполнить в любом случае».

2. ИНТЕРФЕЙС ПРИЛОЖЕНИЯ
Приложение состоит из нескольких основных областей, которые     

1. Заголовочная панель (TitleBar) — содержит логотип и меню
2. Боковая панель категорий — слева, содержит категории блоков
3. Рабочая область — центральная часть для размещения блоков
4. Панель визуализации платы — справа, показывает состояние платы
5. Монитор порта — внизу, отображает вывод программы


3. Рабочая область
Рабочая область — это центральная часть интерфейса, где происходит основная работа с блоками. Здесь вы можете создавать, соединять, перемещать и удалять блоки, формируя алгоритм вашей программы.

Основные элементы рабочей области:

- Поле для блоков:
  Сюда перетаскиваются блоки из панели категорий. Блоки можно свободно перемещать по всей рабочей области — они не ограничены размерами экрана и могут располагаться в любом месте поля. Если блоки приближаются к границам видимой области, рабочая область автоматически расширяется, обеспечивая бесконечное пространство для размещения новых блоков. При перемещении блоков они не могут выходить за пределы рабочей панели (коллизии с краями). Перемещаться по полю можно двумя способами: с помощью горизонтального и вертикального скроллбаров или зажав левую кнопку мыши на пустом месте рабочей области и перемещая курсор. Позиция скролла (то, какая часть рабочей области видна на экране) сохраняется для каждого файла: если вы переключитесь на другую вкладку и вернётесь обратно, рабочая область откроется ровно в том же месте, где вы её оставили.

- Масштабирование:
  В правом нижнем углу расположены кнопки "+" и "−" для увеличения и уменьшения масштаба рабочей области.
  Масштаб можно также изменять с помощью колесика мыши при зажатой клавише Ctrl.
  При масштабировании увеличиваются не только блоки на рабочем поле, но и блоки в левой панели категорий — это обеспечивает удобство выбора даже при большом увеличении.
  Масштаб, выставленный для каждого файла, сохраняется автоматически: при переключении между вкладками (разными файлами) для каждого из них будет восстановлен свой масштаб.

- Центрирование:
  Кнопка "Центрировать" возвращает базовый масштаб рабочей области и перемещает только область видимости в центр рабочей области. Сами блоки при этом не перемещаются — изменяется только то, какая часть рабочей области отображается на экране.

- Миникарта:
  В правом нижнем углу отображается миникарта, на которой видно расположение всех блоков. На миникарте выделена рамка — это область видимости, которая показывает, в какой части большого рабочего поля вы сейчас находитесь. Это помогает быстро сориентироваться при работе с большими проектами. Для перемещения по рабочей области можно зажать левую кнопку мыши на миникарте и перемещать рамку — видимая часть рабочего поля будет следовать за движением рамки на миникарте.

- Скроллбары (ползунки):
  Если блоки выходят за пределы видимой области, появляются горизонтальный и вертикальный скроллбары.
  Рабочую область можно перемещать, зажав правую кнопку мыши или используя скроллбары.

- Автоматическое сохранение:
  Все изменения, включая положение блоков, масштаб и позицию скролла, сохраняются автоматически для каждого файла.
  При переключении между файлами рабочая область восстанавливается в том же положении.

- Горячие клавиши:
  - Ctrl+Z — отмена последнего действия
  - Ctrl+Y — повтор действия

Контекстное меню рабочей области

При нажатии правой кнопкой мыши (ПКМ) на пустой области рабочей зоны открывается контекстное меню с дополнительными функциями:

1. Удалить все блоки
   - Полностью очищает рабочую область от всех блоков.
   - Инструкция: Кликните правой кнопкой мыши по пустому месту рабочей области и выберите пункт "Удалить все блоки". Подтвердите действие, если появится запрос.

2. Упорядочить все блоки
   - Автоматически размещает все блоки в один столбец, если они были разбросаны по рабочей области.
   - Инструкция: Кликните правой кнопкой мыши по пустому месту рабочей области и выберите пункт "Упорядочить все блоки". Все блоки будут аккуратно выстроены друг под другом.

3. Отменить (аналог Ctrl+Z)
   - Возвращает рабочую область на один шаг назад, отменяя последнее действие.
   - Инструкция: Кликните правой кнопкой мыши по пустому месту рабочей области и выберите пункт "Отменить". Также можно использовать сочетание клавиш Ctrl+Z.

4. Повторить (аналог Ctrl+Y)
   - Возвращает отменённое действие, двигаясь на шаг вперёд.
   - Инструкция: Кликните правой кнопкой мыши по пустому месту рабочей области и выберите пункт "Повторить". Также можно использовать сочетание клавиш Ctrl+Y.

---

Пошаговые инструкции по использованию функций рабочей области:

- Как добавить блок:
  1. Выберите нужную категорию в левой панели.
  2. Нажмите и удерживайте нужный блок.
  3. Перетащите блок на рабочую область и отпустите кнопку мыши.

- Как переместить блок:
  1. Наведите курсор на нужный блок.
  2. Зажмите левую кнопку мыши.
  3. Перетащите блок в новое место и отпустите кнопку мыши.

- Как соединить блоки:
  1. Перетащите один блок к другому так, чтобы их "зубчики" совпали.
  2. Отпустите блок — они соединятся автоматически.

- Как удалить блок:
  1. Выделите блок кликом левой кнопкой мыши.
  2. Нажмите клавишу Delete или перетащите блок в область "мусорки".

- Как масштабировать рабочую область:
  1. Используйте кнопки "+" и "−" в правом нижнем углу.
  2. Либо зажмите Ctrl и прокрутите колесо мыши.

- Как центрировать рабочую область:
  1. Нажмите кнопку "Центрировать" (обычно рядом с кнопками масштабирования).

- Как пользоваться миникартой:
  1. В правом нижнем углу найдите миникарту.
  2. Перемещайте рамку на миникарте, чтобы быстро переходить к нужной части рабочей области.

- Как использовать скроллбары:
  1. Если блоки выходят за пределы видимой области, используйте горизонтальный и вертикальный скроллбары для перемещения.
  2. Либо зажмите правую кнопку мыши и перемещайте рабочую область.

- Как отменить или повторить действие:
  1. Используйте сочетания клавиш Ctrl+Z (отмена) и Ctrl+Y (повтор).
  2. Либо вызовите контекстное меню по ПКМ и выберите нужный пункт.

- Как упорядочить все блоки:
  1. Кликните ПКМ по пустой рабочей области.
  2. Выберите "Упорядочить все блоки" — все блоки выстроятся в столбец.

- Как удалить все блоки:
  1. Кликните ПКМ по пустой рабочей области.
  2. Выберите "Удалить все блоки" и подтвердите действие.





3. Работа с файлами
Создание нового файла
1 способ:
1. Нажмите на меню "Файл" в заголовочной панели
2. Выберите "Новый файл"
3. Откроется новая вкладка с пустой рабочей областью с базовым   названием new-file-Число.rud 
Альтернативно:
1.	Нажмите на кнопку плюс в панели файлов
2.	Откроется новая вкладка с пустой рабочей областью с базовым названием new-file-Число.rud

Открытие файла
1. Нажмите на меню "Файл" в заголовочной панели
2. Выберите "Открыть файл"
3. В открывшемся диалоговом окне выберите файл проекта (.json)
4. Проект загрузится в новую вкладку с сохраненным именем файла

Сохранение файла
1. Нажмите на меню "Файл"
2. Выберите "Сохранить как", если хотите указать директорию сохранения и имя файла, появиться диалоговое окно.
3. Выберите “Сохранить”, если хотите сохранить обновления, которые внесли в код.
- Две опции будут работать как “Сохранить как” при первом сохранение файла.

Работа с вкладками
- Каждый открытый файл отображается в отдельной вкладке
- Для переключения между файлами кликните на нужную вкладку
- Для закрытия вкладки нажмите на крестик справа от названия
При переполнении панели файлов (при большом кол-во открытых вкладок) появляется кнопка троеточие, при нажатии на которую, можно посмотреть все названия скрытых файлов в отдельном модальном окне и перейти к ним. Альтернативный вариант, использовать прокрутку вкладок через колесико мыши, прежде наведясь в эту область:

4. Категории блоков
В левой панели доступны 4 категории блоков:
1. Конструкции
Содержит блоки для управления потоком выполнения
•	Старт — блок запуска программы 
Входные данные: не принимает входных данных, служит началом программы. Если удалить этот блок, то все блоки, присоединённые к нему, также будут удалены.
•	Повторить N раз — цикл с заданным количеством повторений
Входные данные: числовое значение (количество повторов). Поддерживает вложенность в тело цикла. Используется для повторяющегося выполнения блока кода определенное количество раз.
•	Повторять, пока — цикл с условием
Входные данные: логическое выражение (условие). Поддерживает вложенность в тело цикла. Используется для выполнения блока кода до тех пор, пока условие не станет ложным.

2. Операторы
Содержит логические и математические операторы
•	Если — условный оператор
Входные данные: логическое выражение (условие). Поддерживает вложенность в тело оператора. Используется для выполнения блока кода только в случае, если выражение истинно.
•	Если-иначе — условный оператор с альтернативной веткой
Входные данные: логическое выражение (условие). Поддерживает вложенность в обе ветви (действия при выполнении и невыполнении условия). Используется для выполнения определенного блока кода в случае, если выражение истинно, и альтернативного блока кода в случае, если ложно. Информация о дополнительных ветках описана в главе “Расширение условий через шестерёнку”
•	Сравнение — сравнение двух значений (=, ≠, >, <, ≥, ≤)
Входные данные: два числовых, строковых или логических значения для сравнения.	Используется для проверки отношений двух значений.
Возвращаемое значение: правда или ложь.
•	Логические операторы — И, ИЛИ
Входные данные: два логических значения. "И" используются для проверки, истинны ли обе операции одновременно, "ИЛИ" для проверки, истинно ли хотя бы одно из логических выражений.
Возвращаемое значение: правда или ложь.
•	Логический оператор НЕ
Входные данные: одно логическое значение (правда или ложь). Используется для инвертирования логического значения — если на вход подаётся "правда", то результат будет "ложь", и наоборот.
Возвращаемое значение: правда или ложь (противоположное входному значению).
•	Логические операторы — И, ИЛИ
Входные данные: два логических значения. "И" используются для проверки, истинны ли обе операции одновременно, "ИЛИ" для проверки, истинно ли хотя бы одно из логических выражений.
Возвращаемое значение: правда или ложь.
•	Математические операторы — сложение, вычитание, умножение, деление
Входные данные: два числовых значения. Используется для выполнения математических операций с ними. 
Возвращаемое значение: Числовое значение 

3. Переменные и значения
Содержит блоки для работы с данными
•	Присвоить — присваивания значения переменной.
Входные данные: первое поле - имя переменной (выбор из списка), второе поле - значение (число, текст, логическое значение).
•	Переменная — использование значения переменной
Входные данные: имя переменной (выбор из списка).
•	Число 
Входные данные: числовое значение (ввод вручную).
•	Текст 
Входные данные: строковое значение (ввод вручную).
•	Логическое значение
Входные данные: Правда или ложь (выбор из списка).

4. Электроника
Содержит блоки для работы с платой
•	Цифровая запись — установка значения на цифровом пине
Входные данные: числовое значение (номер пина), значение HIGH или LOW (выбор из списка).
•	Аналоговая запись — установка значения на аналоговом пине 
Входные данные: числовое значение (номер пина), значение (число от 0 до 255). 
•	Поставить пин — настройка режима пина
Входные данные: числовое значение (номер пина), режим - ВХОД, ВЫХОД, ПОДТЯГИВАНИЕ (выбор из выпадающего списка).
•	Напечатать — вывод текста в монитор порта
Входные данные: число, строка, логическое выражение или переменная 
•	Задержка — пауза в миллисекундах
Входные данные: числовое значение
•	Значение аналог. пина — чтение значения с аналогового пина
Входные данные: числовое значение (номер пина)
•	Значение цифр. пина — чтение значения с цифрового пина
Входные данные: числовое значение (номер пина) 

5. Работа с блоками
Добавление блоков на рабочую область
1. Выберите нужную категорию в левой панели.
2. Нажмите и удерживайте нужный блок.
3. Перетащите блок на рабочую область и отпустите кнопку мыши.

Cоединение и вложенность блоков	
- Блоки соединяются между собой с помощью «зубчиков» автоматически при приближении друг к другу сверху и снизу, образуя цепочки команд, которые выполняются последовательно.
- У многих блоков есть входные параметры — специальные поля, куда можно вставлять другие блоки подходящего типа. Например, в поле блока «Задержка» можно вставить только числовой блок, а строку — нельзя. Если тип блока не подходит для данного поля, вставка невозможна —желтая цветовая подсветка не появится.
- Вложенность означает, что один или несколько блоков помещаются внутрь тела другого (родительского) блока и выполняются только в его контексте: например, блоки внутри цикла выполняются на каждой итерации, а блоки внутри условия — только если условие истинно.

Перемещение блоков
1. Внутри рабочей области наведитесь на нужный блок мышью.
2. Нажмите и удерживайте блок.
3. Перетащите блок в новое место, путем перемещения курсора и отпустите кнопку мыши.
- Если блок снизу соединён с другими блоками (образует цепочку), при перемещении этого блока также перемещаются все связанные с ним снизу блоки — он выступает в роли главного блока для всей цепочки. Чтобы отсоединить блок от цепочки, нужно сначала отсоединить снизу все связанные с ним блоки, а потом уже отсоединить сам блок.

Удаление блоков
1) Чтобы удалить блок, выделите его (кликните левой кнопкой мыши) и нажмите клавишу Delete.
2) Можно вызвать контекстное меню (ПКМ по блоку) и выбрать пункт «Удалить».
3) Также удаление происходит если перетащить блок или цепочку блоков обратно в панель категорий, где выбираются блоки. Этот способ особенно удобен для удаления сразу нескольких связанных блоков.
- При удалении родительского блока автоматически удаляются все вложенные в него блоки.

Копирование и вставка блоков
1. Для копирования блока выделите его (кликните левой кнопкой мыши) и нажмите Ctrl+C.
2. Для вставки используйте Ctrl+V — блок появится рядом с копируемым оригиналом.

Настройка параметров блоков
- Числовые значения: кликните внутри числового блока и введите новое значение.
- Текстовые поля: кликните внутри текстового блока и введите новое значение.
- Выбор заготовленных вариантов: кликните на стрелку внутри блока и выберите нужное значение из выпадающего списка.

Работа с переменными
В Rudiron IDE есть два типа блоков, связанных с переменными:
Блок «Переменная» — можно вставлять в другие блоки, он хранит в себе значение переменной. Блок «Присвоить» — используется для присваивания значения переменной. В обоих блоках присутствуют инструменты для работы с ними - одинаковый набор опций. Переменные по умолчанию имеют название «ЭЛЕМЕНТ» — это базовое имя, которое всегда остается доступным в выпадающем списке, даже если вы создадите и переименуете другие переменные.

Удаление переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. В выпадающем меню выберите «Удалить переменную».
3. Все блоки с этим именем будут удалены из рабочей области.

Переименование переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. Выберите «Переименовать переменную».
3. Введите новое имя во всплывающем окне и нажмите «Применить».
4. Имя изменится у всех блоков с этим названием.

Изменение значения переменной:
1. Используйте блок «Присвоить».
2. В первом поле выберите нужную переменную.
3. Во втором поле укажите новое значение (число, строку или другую переменную).

Использование существующей переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. В выпадающем списке выберите нужное имя переменной.
3. Блок будет ссылаться на выбранную переменную.

Расширение условий через шестерёнку
У некоторых блоков (например, «Если», «Если-иначе») есть кнопка-шестерёнка. При нажатии на неё открывается меню настроек блока, где можно добавлять дополнительные ветви («Иначе если», «Иначе»), а также менять их порядок с сохранением вложенностей. Это необходимо для построения сложных ветвлений прямо внутри одного блока, вместо их повторений 
- Окно настроек остаётся открытым до тех пор, пока вы снова не нажмёте на шестерёнку, в связи с этим его можно перетаскивать в любое место рабочей области, зажав левую клавишу мыши и перемещая курсор. Функция позволяет не загораживать код, который вы редактируете.

Дополнительные действия через контекстное меню
Кликните правой кнопкой мыши по блоку, чтобы открыть контекстное меню.
Доступные функции:
  - Дублировать
  - Удалить
  - Вставка внутри /Вставка снаружи 

Дублирование блоков
- Для создания копии блока выберите пункт «Дублировать» в контекстном меню.
-   Дублируется как сам блок, так и все вложенности.

Сворачивание и разворачивание блоков
Некоторые блоки (например, условные операторы или работа с пинами) можно свернуть для компактного отображения.
- Для этого используйте пункт «Вставка внутрь» или «Вставка снаружи» в контекстном меню.
- Свёрнутый блок отображается в двухстрочном виде, одно поле - одна строка.


7. ВИЗУАЛИЗАЦИЯ ПЛАТЫ

ПАНЕЛЬ ВИЗУАЛИЗАЦИИ
Справа от рабочей области находится панель с изображением платы Рудирон. 
На ней отображаются:
- Все доступные пины
- Состояние цифровых пинов (HIGH/LOW)
- Значения аналоговых пинов
- PWM-пины с текущими значениями

ИНТЕРАКТИВНОСТЬ
- Масштабирование: используйте колесо мыши для увеличения/уменьшения платы
- Перемещение: перетаскивайте изображение через зажатие мышки и перемещение курсора 
- Центрирование: нажмите кнопку с крестиком для возврата в центр

ЦВЕТОВАЯ ИНДИКАЦИЯ
- Серый — пин не используется
- Зеленый — цифровой пин HIGH
- Красный — цифровой пин LOW
- Синий — аналоговый пин с определенным значением
- Желтый — PWM-пин



8. Монитор порта
Монитор порта отображает:
- Сообщения о подключении/отключении платы
- Вывод команд "Напечатать"

Управление
- Очистка — кнопка с иконкой корзины для очистки информации
- Автопрокрутка — автоматическая прокрутка к новым сообщениям
- Выделение текста — для копирования сообщений
- 








9. ВЫПОЛНЕНИЕ ПРОГРАММ
ЗАПУСК ПРОГРАММЫ
1. Убедитесь, что плата подключена
2. Найдите блок "СТАРТ" (желтый блок с кнопкой)
3. Нажмите на кнопку "СТАРТ" на блоке
4. Программа начнет выполняться

ОСТАНОВКА ПРОГРАММЫ
1. Нажмите на кнопку "СТОП" на блоке СТАРТ
2. Или нажмите кнопку "СТАРТ" повторно

10. Советы и рекомендации
Отладка программ
1. Начните с простого — создайте простую программу для проверки подключения
3. Печатайте значения — используйте блоки "Напечатать" для вывода переменных
4. Проверяйте пины — убедитесь, что пины настроены правильно

оптимизация производительности
1. Избегайте бесконечных циклов — всегда предусматривайте условие выхода
2. Используйте переменные — для повторяющихся значений
3. Проверяйте логику — убедитесь в правильности условий и циклов

безопасность
1. Не подключайте/отключайте плату во время выполнения программы
2. Проверяйте номера пинов — неправильный пин может повредить плату
3. Используйте правильные напряжения — не превышайте допустимые значения
4. Делайте резервные копии — сохраняйте важные проекты в нескольких местах






