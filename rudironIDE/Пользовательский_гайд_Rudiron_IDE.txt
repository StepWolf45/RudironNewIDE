Руководство пользователя Rudiron IDE

СОДЕРЖАНИЕ
0. Установка
1. Введение
2. Интерфейс приложения
3. Работа с файлами
4. Подключение к плате
5. Категории блоков
6. Работа с блоками
7. Визуализация платы
8. Монитор порта
9. Выполнение программ
10. Советы и рекомендации














Введение
Rudiron IDE — это интегрированная среда разработки для визуального программирования микроконтроллера Рудирон от компании Aquarius. Приложение предоставляет интуитивно понятный визуальный интерфейс для создания программ с помощью блочного программирования для взаимодействия с аппаратной платформой Rudiron, обеспечивая полный цикл программирования от создания кода до его выполнения на контроллере

Установка Rudiron IDE на Windows
1. Перейдите на страницу релизов проекта на GitFlic: https://gitflic.ru/project/rudiron/rudiron-ide/releases
2. Найдите последнюю версию приложения и скачайте установочный файл с расширением .exe (например, RudironIDE-Setup.exe).
3. Запустите скачанный файл двойным щелчком мыши.
4. В появившемся окне следуйте инструкциям установщика:
   - При необходимости выберите папку для установки
   - Дождитесь завершения процесса установки
5. После завершения установки на рабочем столе появится ярлык Rudiron IDE (если вы выбрали соответствующую опцию).
6. Запустите приложение через ярлык или из меню «Пуск».

Примечание:
- Для работы программы не требуется установка дополнительных драйверов для большинства плат Rudiron. Если плата не определяется, скачайте и установите драйверы с официального сайта производителя платы.
- Если при запуске появляется предупреждение SmartScreen, выберите «Подробнее» → «Выполнить в любом случае».

2. ИНТЕРФЕЙС ПРИЛОЖЕНИЯ
ГЛАВНОЕ ОКНО
Приложение состоит из нескольких основных областей:

1. Заголовочная панель (TitleBar) — содержит логотип и меню
2. Боковая панель категорий — слева, содержит категории блоков
3. Рабочая область — центральная часть для размещения блоков
4. Панель визуализации платы — справа, показывает состояние платы
5. Монитор порта — внизу, отображает вывод программы

МЕНЮ ПРИЛОЖЕНИЯ

Меню "Файл":
- Новый файл — создает новый проект
- Открыть файл — открывает существующий проект (.json)
- Сохранить — сохраняет текущий проект
- Сохранить как — сохраняет проект под новым именем

Меню "Подключение":
- Порт — список доступных USB-портов для подключения платы
- Обновить — обновляет список доступных портов



3. РАБОТА С ФАЙЛАМИ


СОЗДАНИЕ НОВОГО ФАЙЛА
1. Нажмите на меню "Файл" в заголовочной панели
2. Выберите "Новый файл"
3. Откроется новая вкладка с пустой рабочей областью

ОТКРЫТИЕ ФАЙЛА
1. Нажмите на меню "Файл"
2. Выберите "Открыть файл"
3. В открывшемся диалоге выберите файл проекта (.json)
4. Проект загрузится в новую вкладку

СОХРАНЕНИЕ ФАЙЛА
1. Нажмите на меню "Файл"
2. Выберите "Сохранить" (для первого сохранения) или "Сохранить как"
3. Выберите место сохранения и имя файла
4. Нажмите "Сохранить"

РАБОТА С ВКЛАДКАМИ
- Каждый открытый файл отображается в отдельной вкладке
- Для переключения между файлами кликните на нужную вкладку
- Для закрытия вкладки нажмите на крестик справа от названия

5. Категории блоков
В левой панели доступны 4 категории блоков:
1. КОНСТРУКЦИИ
Содержит блоки для управления потоком выполнения:
- СТАРТ — блок запуска программы 
  Входные данные: не принимает входных данных, служит началом программы.
  Особенность блока «Старт»: если удалить этот блок, то все блоки, присоединённые к нему, также будут удалены.
- Повторять — цикл с заданным количеством повторений
  Входные данные: принимает числовое значение (количество повторов), внутрь блока можно вложить другие блоки (тело цикла).
- Пока — цикл с условием
  Входные данные: принимает логическое выражение (условие), внутрь блока можно вложить другие блоки (тело цикла).

2. ОПЕРАТОРЫ
Содержит логические и математические операции:
- Если — условный оператор
  Входные данные: принимает логическое выражение (условие), внутрь блока можно вложить другие блоки (действия при выполнении условия). Через шестерёнку можно добавить дополнительные условия (иначе если, иначе).
- Если-иначе — условный оператор с альтернативной веткой
  Входные данные: принимает логическое выражение (условие), внутрь блока можно вложить другие блоки (действия при выполнении и невыполнении условия). Через шестерёнку можно добавить дополнительные условия.
- Сравнение — сравнение двух значений (, ≠, >, <, ≥, ≤)
  Входные данные: принимает два числовых или логических значения для сравнения.
- Логические операции — И, ИЛИ, НЕ
  Входные данные: принимает одно или два логических значения (в зависимости от операции).
- Математические операции — сложение, вычитание, умножение, деление
  Входные данные: принимает два числовых значения.

3. ПЕРЕМЕННЫЕ
Содержит блоки для работы с данными:
- Присвоить — создание и изменение переменных
  Входные данные: имя переменной (выбор из существующих или создание новой), значение (число, текст, результат выражения).
- Переменная — использование значения переменной
  Входные данные: имя переменной (выбор из существующих).
- Число — ввод числового значения
  Входные данные: числовое значение (ввод вручную).
- Текст — ввод текстового значения
  Входные данные: строковое значение (ввод вручную).

4. ЭЛЕКТРОНИКА
Содержит блоки для работы с платой:
- Цифровая запись — установка HIGH/LOW на цифровом пине
  Входные данные: номер пина (выбор из списка), значение (HIGH/LOW, выбор из выпадающего списка).
- Аналоговая запись — установка значения на аналоговом пине (0-255)
  Входные данные: номер пина (выбор из списка), значение (число от 0 до 255).
- Поставить пин — настройка режима пина (вход/выход/подтягивание)
  Входные данные: номер пина (выбор из списка), режим (выбор из выпадающего списка).
- Напечатать — вывод текста в монитор порта
  Входные данные: строка или переменная (можно вставить текстовый блок или блок переменной).
- Задержка — пауза в миллисекундах
  Входные данные: числовое значение (только число, нельзя вставить строку).
- Аналоговое чтение — чтение значения с аналогового пина
  Входные данные: номер пина (выбор из списка).
- Цифровое чтение — чтение значения с цифрового пина
  Входные данные: номер пина (выбор из списка).

Примечание: если попытаться вставить блок неподходящего типа, появится цветная подсветка-индикатор, сигнализирующая о невозможности вставки.

6. Работа с блоками
Добавление блоков на рабочую область
1. Выберите нужную категорию в левой панели.
2. Нажмите и удерживайте нужный блок.
3. Перетащите блок на рабочую область и отпустите кнопку мыши.
Cоединение и вложенность блоков	
- Блоки соединяются между собой с помощью «зубчиков» автоматически при приближении друг к другу сверху и снизу, образуя цепочки команд, которые выполняются последовательно.
- У многих блоков есть входные параметры — специальные поля, куда можно вставлять другие блоки подходящего типа. Например, в поле блока «Задержка» можно вставить только числовой блок, а строку — нельзя. Если тип блока не подходит для данного поля, вставка невозможна —желтая цветовая подсветка не появится.
- Вложенность означает, что один или несколько блоков помещаются внутрь тела другого (родительского) блока и выполняются только в его контексте: например, блоки внутри цикла выполняются на каждой итерации, а блоки внутри условия — только если условие истинно.
Перемещение блоков
1. Внутри рабочей области наведитесь на нужный блок мышью.
2. Нажмите и удерживайте блок.
3. Перетащите блок в новое место, путем перемещения курсора и отпустите кнопку мыши.
- Если блок снизу соединён с другими блоками (образует цепочку), при перемещении этого блока также перемещаются все связанные с ним снизу блоки — он выступает в роли главного блока для всей цепочки.
Удаление блоков
1) Чтобы удалить блок, выделите его (кликните левой кнопкой мыши) и нажмите клавишу Delete.
2) Можно вызвать контекстное меню (ПКМ по блоку) и выбрать пункт «Удалить».
3) Также удаление происходит если перетащить блок или цепочку блоков обратно в панель категорий, где выбираются блоки. Этот способ особенно удобен для удаления сразу нескольких связанных блоков.
- При удалении родительского блока автоматически удаляются все вложенные в него блоки.
Копирование и вставка блоков
1. Для копирования блока выделите его (кликните левой кнопкой мыши) и нажмите Ctrl+C.
2. Для вставки используйте Ctrl+V — блок появится рядом с копируемым оригиналом.
Настройка параметров блоков
- Числовые значения: кликните внутри числового блока и введите новое значение.
- Текстовые поля: кликните внутри текстового блока и введите новое значение.
- Выбор заготовленных параметров: кликните на стрелку внутри блока и выберите нужное значение из выпадающего списка.

Работа с переменными
--------------------
В Rudiron IDE есть два типа блоков, связанных с переменными:

- **Блок «Переменная»** — можно вставлять в другие блоки, он хранит в себе значение переменной. Чтобы открыть меню опций, кликните по самому блоку.
- **Блок «Присвоить»** — используется для присваивания значения переменной. Чтобы открыть меню опций, кликните по первому (левому) полю блока.

В обоих случаях появится одинаковый набор опций:

1) **Список имён всех переменных, созданных в файле**
   - Для выбора переменной:
     1. Откройте меню опций (см. выше).
     2. В выпадающем списке выберите нужное имя переменной.
     3. Блок будет ссылаться на выбранную переменную (или значение будет присвоено выбранной переменной).
2) **Переименовать переменную**
   - Чтобы переименовать переменную во всех блоках:
     1. Откройте меню опций.
     2. Выберите «Переименовать переменную».
     3. Откроется всплывающее окно с полем для ввода нового имени и кнопками «Применить», «Отменить», «Закрыть».
     4. Введите новое имя и нажмите «Применить» — имя изменится у всех блоков с этим названием.
3) **Удалить переменную**
   - Чтобы удалить все экземпляры переменной:
     1. Откройте меню опций.
     2. Выберите «Удалить переменную».
     3. Все блоки с этим именем будут удалены из рабочей области.

В блоке «Присвоить» второе поле — это значение, которое будет присвоено переменной. В это поле можно вставить число, строку или другой блок переменной.

**Пошаговые инструкции:**

Удаление переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. В выпадающем меню выберите «Удалить переменную».
3. Все блоки с этим именем будут удалены из рабочей области.

Переименование переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. Выберите «Переименовать переменную».
3. Введите новое имя во всплывающем окне и нажмите «Применить».
4. Имя изменится у всех блоков с этим названием.

Изменение значения переменной:
1. Используйте блок «Присвоить».
2. В первом поле выберите нужную переменную.
3. Во втором поле укажите новое значение (число, строку или другую переменную).

Использование существующей переменной:
1. Кликните по блоку «Переменная» или по выпадающему списку в блоке «Присвоить».
2. В выпадающем списке выберите нужное имя переменной.
3. Блок будет ссылаться на выбранную переменную.


Дополнительные действия через контекстное меню
Кликните правой кнопкой мыши по блоку, чтобы открыть контекстное меню.
Доступные функции:
  - Дублировать
  - Удалить
  - Свернуть/развернуть 
  - Копировать/вставить
  - Другие опции (зависят от типа блока)

Дублирование блоков
- Для создания копии блока выберите пункт «Дублировать» в контекстном меню.
- Дублируется как сам блок, так и все вложенные в него блоки.

Сворачивание и разворачивание блоков
- Некоторые блоки (например, условные операторы или циклы) можно свернуть для компактного отображения.
- Для этого используйте пункт «Свернуть» или «Развернуть» в контекстном меню.
- Свёрнутый блок отображается в виде одной строки, все вложенные блоки скрыты.

Расширение условий через шестерёнку
-----------------------------------
- У некоторых блоков (например, «Если», «Если-иначе») есть кнопка-шестерёнка.
- При нажатии на шестерёнку открывается меню настроек блока, где можно добавлять дополнительные условия («Иначе если», «Иначе»), а также менять их порядок.
- Это удобно и необходимо для построения сложных ветвлений прямо внутри одного блока.
- Меню настроек остаётся открытым до тех пор, пока вы снова не нажмёте на шестерёнку — это позволяет свободно работать с блоком, вставлять внутрь другие вложенности, редактировать условия, не закрывая меню.
- Например, если нужно поменять условия местами, это можно сделать прямо в меню через шестерёнку.

ПРИМЕНЕНИЕ МЕХАНИК НА ПРАКТИКЕ
-
- Используйте дублирование для быстрого создания похожих конструкций.
- Сворачивайте большие блоки для удобства навигации по проекту.
- Воспользуйтесь контекстным меню для доступа к расширенным функциям.
- Следите за подсветкой при вставке блоков — это поможет избежать ошибок.
- Для сложных условий используйте шестерёнку, чтобы добавить нужное количество ветвлений.


7. ВИЗУАЛИЗАЦИЯ ПЛАТЫ

ПАНЕЛЬ ВИЗУАЛИЗАЦИИ
Справа от рабочей области находится панель с изображением платы Rudiron. 
На ней отображаются:
- Все доступные пины
- Состояние цифровых пинов (HIGH/LOW)
- Значения аналоговых пинов
- PWM-пины с текущими значениями

ИНТЕРАКТИВНОСТЬ
- Масштабирование: используйте колесо мыши для увеличения/уменьшения
- Перемещение: перетаскивайте изображение мышью
- Центрирование: нажмите кнопку с крестиком для возврата в центр

ЦВЕТОВАЯ ИНДИКАЦИЯ
- Серый — пин не используется
- Зеленый — цифровой пин HIGH
- Красный — цифровой пин LOW
- Синий — аналоговый пин с определенным значением
- Желтый — PWM-пин



8. МОНИТОР ПОРТА


НАЗНАЧЕНИЕ
Монитор порта отображает:
- Сообщения о подключении/отключении платы
- Вывод команд "Напечатать"
- Ошибки и предупреждения
- Отладочную информацию

УПРАВЛЕНИЕ
- Очистить — кнопка с иконкой корзины для очистки лога
- Автопрокрутка — автоматическая прокрутка к новым сообщениям
- Выделение текста — для копирования сообщений








9. ВЫПОЛНЕНИЕ ПРОГРАММ


ЗАПУСК ПРОГРАММЫ
1. Убедитесь, что плата подключена
2. Найдите блок "СТАРТ" (желтый блок с кнопкой)
3. Нажмите на кнопку "СТАРТ" на блоке
4. Программа начнет выполняться

ОСТАНОВКА ПРОГРАММЫ
1. Нажмите на кнопку "СТОП" на блоке СТАРТ
2. Или нажмите кнопку "СТАРТ" повторно

ОТЛАДКА
- Следите за монитором порта для вывода сообщений
- Наблюдайте за изменениями в визуализации платы
- Используйте блоки "Напечатать" для отладочной информации

ОШИБКИ ВЫПОЛНЕНИЯ
- "Подключите плату" — проверьте USB-соединение
- "Неправильный пин" — проверьте номера пинов в блоках
- "Ошибка чтения" — проверьте настройки пинов (вход/выход)






10. СОВЕТЫ И РЕКОМЕНДАЦИИ


ЭФФЕКТИВНАЯ РАБОТА
1. Используйте вкладки — работайте с несколькими проектами одновременно
2. Сохраняйтесь часто — используйте Ctrl+S для быстрого сохранения
3. Группируйте блоки — используйте комментарии для организации кода
4. Проверяйте подключение — убедитесь, что плата подключена перед запуском

ОТЛАДКА ПРОГРАММ
1. Начните с простого — создайте простую программу для проверки подключения
2. Используйте задержки — добавляйте блоки "Задержка" для замедления выполнения
3. Печатайте значения — используйте блоки "Напечатать" для вывода переменных
4. Проверяйте пины — убедитесь, что пины настроены правильно

ОПТИМИЗАЦИЯ ПРОИЗВОДИТЕЛЬНОСТИ
1. Избегайте бесконечных циклов — всегда предусматривайте условие выхода
2. Используйте переменные — для повторяющихся значений
3. Группируйте операции — объединяйте связанные блоки
4. Проверяйте логику — убедитесь в правильности условий и циклов

БЕЗОПАСНОСТЬ
1. Не подключайте/отключайте плату во время выполнения программы
2. Проверяйте номера пинов — неправильный пин может повредить плату
3. Используйте правильные напряжения — не превышайте допустимые значения
4. Делайте резервные копии — сохраняйте важные проекты в нескольких местах






